name: Unit Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
jobs:
  env:
    runs-on: ubuntu-latest
    steps:
      - name: Create .env file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NODE_ENV: test
          envkey_CURRENCY: USD
          envkey_TOKEN: ETH
          envkey_PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
          envkey_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          envkey_NETWORK: ${{ secrets.NETWORK }}
          envkey_MAINNET_URL: ${{ secrets.MAINNET_URL }}
          envkey_TESTNET_URL: ${{ secrets.TESTNET_URL }}
          envkey_ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
          envkey_COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
          envkey_ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          envkey_REPOST_GAS: false
          file_name: .env
          fail_on_empty: true
      - uses: actions/upload-artifact@master
        with:
          name: env
          path: .env
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        node-version: [16.x]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Create env file
        run: |
          touch .env
          NODE_ENV=test >> .env
          CURRENCY=USD >> .env
          TOKEN=ETH >> .env
          PUBLIC_KEY=${{ secrets.PUBLIC_KEY }} >> .env
          PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} >> .env
          NETWORK=${{ secrets.NETWORK }} >> .env
          MAINNET_URL=${{ secrets.MAINNET_URL }} >> .env
          TESTNET_URL=${{ secrets.TESTNET_URL }} >> .env
          ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }} >> .env
          COINMARKETCAP_API_KEY=${{ secrets.COINMARKETCAP_API_KEY }} >> .env
          ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }} >> .env
          REPORT_GAS=false >> .env
      - uses: actions/download-artifact@master
        with:
          name: env
          path: .env
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g yarn
      - run: yarn install
      - run: yarn test
