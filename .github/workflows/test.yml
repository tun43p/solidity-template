name: Unit Tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        node-version: [16.x]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g yarn
      - run: yarn install
      - run: yarn test
# jobs:
#   env:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Create .env file
#         uses: SpicyPizza/create-envfile@v1.3
#         with:
#           envkey_NODE_ENV: test
#           envkey_CURRENCY: USD
#           envkey_TOKEN: ETH
#           envkey_PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
#           envkey_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
#           envkey_NETWORK: ${{ secrets.NETWORK }}
#           envkey_MAINNET_URL: ${{ secrets.MAINNET_URL }}
#           envkey_TESTNET_URL: ${{ secrets.TESTNET_URL }}
#           envkey_ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
#           envkey_COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
#           envkey_ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
#           envkey_REPOST_GAS: false
#           file_name: .env
#           fail_on_empty: true
#       - uses: actions/upload-artifact@master
#         with:
#           name: env
#           path: .env
#   test:
#     needs: [env]
#     strategy:
#       matrix:
#         platform: [ubuntu-latest]
#         node-version: [16.x]
#     runs-on: ${{ matrix.platform }}
#     steps:
#       - name: Get .env file
#       - uses: actions/download-artifact@master
#         with:
#           name: env
#           path: .env
#       - uses: actions/checkout@v1
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - run: npm install -g yarn
#       - run: yarn install
#       - run: yarn test
